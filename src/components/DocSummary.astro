---
const url = Astro.url;

const pages = [
	{ path: "/", title: "Presentation" },
	{ path: "/install", title: "Installation" },
	{
		redirect: "/features/gherkin",
		title: "Features",
		children: [
			{ path: "/features/gherkin", title: "Gherkin" },
			{ path: "/features/scenario", title: "Scenario" },
			{ path: "/features/scenario-outline", title: "Scenario Outline" },
            { path: "/features/background", title: "Background" },
			{ path: "/features/rule", title: "Rules" },
			{ path: "/features/hooks", title: "Hooks" },
			{ path: "/features/gherkin-tags", title: "Gherkin tags" },
			{ path: "/features/sequentially-and-async", title: "Async steps and sequentially" },
			{ path: "/features/step-expression", title: "Steps with expressions" },
		],
	},
	{ 
        link: "https://github.com/amiceli/vitest-cucumber/issues/77", 
        title: "Upcoming",
        icon : 'lni-github-original',
    },
];

function getLinkClass(pageUrl : string) {
	return url.pathname === `${pageUrl}/` ? "is--active" : ``
}
---

<div class="Doc-summary">
    <h2>Documentation</h2>
    <ul>
        {
            pages.map((p) => {
                return (
                    <li>
                        {
                            p.path && <a href={p.path || p.redirect} class={getLinkClass(p.path)}>
                                {p.title}
                            </a>
                        }
                        {
                            p.link && <a href={p.link} target="_blank">
                                {
                                    p.icon && <i class={`lni ` + p.icon}></i>
                                }
                                {p.title}
                            </a>
                        }
                        {p.children?.length > 0 && (
                            <span>{p.title}</span>
                            <ul>
                                {p.children?.map((child) => {
                                    return (
                                        <li>
                                            <a
                                                href={child.path}
                                                class={getLinkClass(child.path)}
                                            >
                                                {child.title}
                                            </a>
                                        </li>
                                    );
                                })}
                            </ul>
                        )}
                    </li>
                );
            })
        }
    </ul>
</div>

<style lang="scss" scoped>
    .Doc-summary {
        li {
            list-style-type: none;
            ul {
                margin-bottom: 5px;
            }
        }
        a {
            text-decoration: none;
            &.is--active {
                color: var(--main-color);
            }
            i {
                vertical-align: text-bottom;
            }
        }

        .for--beta {
            height: 30px;
            line-height: 30px;
            color : white;
            background : var(--main-color);
            padding-left: 7px;
            padding-right: 7px;
            margin-left: 7px;
            border-radius : 10px;
            display: inline-block;
        }
    }
</style>
